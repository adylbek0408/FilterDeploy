version: '3.8'

services:
  # Nginx как reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend:/usr/share/nginx/html  # Монтируем папку frontend напрямую
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend

  # Backend Django service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    command: gunicorn --bind 0.0.0.0:8000 backend.wsgi:application
    depends_on:
      postgres:
        condition: service_healthy

  # Bot service
  bot:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - ./backend:/app
    command: python bot.py
    depends_on:
      - postgres
      - backend

  # PostgreSQL database
  postgres:
    image: postgres:13-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  static_volume:
  media_volume:
